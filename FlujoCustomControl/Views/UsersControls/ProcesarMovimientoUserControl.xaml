<UserControl 
           x:Class="FlujoCustomControl.Views.UsersControls.ProcesarMovimientoUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FlujoCustomControl"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             xmlns:xceedc ="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:fa="http://schemas.fontawesome.io/icons/"
    mc:Ignorable="d"  Width="650" Height="600"   Background="#fff" FontSize="14" FontFamily="Segoe UI Emoji"  >

    <UserControl.Resources>
        <ResourceDictionary>

            <local:RadioConverter x:Key="RadioConverter"/>
            <BooleanToVisibilityConverter  x:Key="BooleanToVisibilityConverter" />
            <local:CellTipoMovimientoConverter x:Key="CellTipoMovimientoConverter" />
            <local:PasswordBoxConverter x:Key="PasswordBoxConverter" />
            <Image x:Key="RefreshICon"  Source="pack://application:,,,/FlujoCustomControl;component/Resources/Images/RefreshIco.ico" />
            <Image x:Key="ResetICon"  Source="pack://application:,,,/FlujoCustomControl;component/Resources/Images/Reset.ico" />
            <Image x:Key="FindICon"  Source="pack://application:,,,/FlujoCustomControl;component/Resources/Images/Find.ico" />
            <BitmapImage  x:Key="MoneyInput"  UriSource="pack://application:,,,/FlujoCustomControl;component/Resources/Images/MoneyInput.ico" />
            <BitmapImage x:Key="MoneyOutput"  UriSource="pack://application:,,,/FlujoCustomControl;component/Resources/Images/MoneyOutput.ico" />
            <Style x:Key="GroupBoxCredencialesStyle" TargetType="{x:Type GroupBox}">
                <Setter Property="BorderBrush" Value="#FFD5DFE5"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupBox}">
                            <Grid SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="6"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="6"/>
                                </Grid.RowDefinitions>
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3"/>
                                <Border BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5">
                                    <Border.OpacityMask>
                                        <MultiBinding ConverterParameter="7" UpdateSourceTrigger="Default">
                                            <MultiBinding.Converter>
                                                <BorderGapMaskConverter/>
                                            </MultiBinding.Converter>
                                            <Binding ElementName="Header" Path="ActualWidth"/>
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                        </MultiBinding>
                                    </Border.OpacityMask>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                                        <Border BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                                    </Border>
                                    <Border.RenderTransform>
                                        <ScaleTransform ScaleX="-1"/>
                                    </Border.RenderTransform>
                                </Border>
                                <Border x:Name="Header" Grid.Column="2" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Right">
                                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <ContentPresenter Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/FlujoCustomControl;component/Themes/Style.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </UserControl.Resources>


    <Grid   Name="rootElement"  KeyDown="RootElement_KeyDown" >

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"  />
            <ColumnDefinition Width="*" />

        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>

            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"  />

        </Grid.RowDefinitions>

        <Grid.Resources>

            <Style x:Key="inlineTextBox" TargetType="{x:Type TextBox}">
                <Setter Property="Margin" Value="10,5,10,0"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="15"/>
            </Style>

            <Style x:Key="inlineText" TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="10,5,10,0"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="12"/>
            </Style>
            <Style x:Key="titleText" TargetType="{x:Type TextBlock}">
                <Setter Property="DockPanel.Dock" Value="Top"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Margin" Value="10,5,10,0"/>
            </Style>
            <Style x:Key="btnStandard"  TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="10,5,10,0"/>
                <Setter Property="Width" Value="60"/>
            </Style>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Margin" Value="10,5,10,0"/>
            </Style>
            <Style x:Key="CentrarContenidoCelda"  TargetType="{x:Type  DataGridCell}" >
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridCell">
                            <Grid>
                                <ContentPresenter HorizontalAlignment="Center"  VerticalAlignment="Center"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="FrameworkElement" x:Key="VisibleAnimation">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="Opacity" Value="0"/>
                <Style.Triggers>
                    <Trigger Property="Visibility" Value="Visible">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                          From="0.0" To="1.0" Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="SelectedRemoved" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                <Setter Property="Foreground" Value="Black" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{x:Null}" />
                        <Setter Property="BorderBrush" Value="{x:Null}" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="toogleStyle"  BasedOn="{StaticResource { x:Type   ToggleButton}}"  TargetType="{x:Type RadioButton}">
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter Property="Background" Value="#eee"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


        </Grid.Resources>

        <!--Encabezado-->
        <!--<Border Background="#FF032B44" Grid.ColumnSpan="2">
            <Label Content="Registro de movimientos" FontFamily="Yu Gothic Medium" FontSize="16" FontWeight="Bold" FontStyle="Italic" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>-->
        <StackPanel Grid.Row="3" Grid.ColumnSpan="2" Background="LightGray" Height="40" VerticalAlignment="Top" Width="300">
            <TextBlock Style="{StaticResource inlineText}" Name="lbStatus" Foreground="Gray" FontSize="16" FontWeight="Bold"  HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding Label_Status_Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>

        <ItemsControl Name="ctListaDeErrores" Grid.Row="3" Grid.ColumnSpan="2"  Height="40"  HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  ItemsSource="{Binding ColeccionDeErrores}" VerticalAlignment="Top">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding MensajeError}" FontSize="16" Background="DarkRed" FontWeight="Bold" Foreground="White" TextAlignment="Center" Height="40" Padding=" 0 8 0 0 " />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>


        <!--Area de Token-->
        <Grid x:Name="modal" Panel.ZIndex="100"  Grid.ColumnSpan="2" Grid.RowSpan="4" Background="#83000000" Visibility="{Binding Path=ShowSeccionPin, Converter={StaticResource BooleanToVisibilityConverter} }">

            <StackPanel x:Name="token" Width="400" Height="200"  Margin=" 0 100"  Orientation="Vertical"  Background="White" HorizontalAlignment="Center" VerticalAlignment="Top" >

                <TextBlock FontSize="18" Margin="0 40 0 10" Style="{StaticResource inlineText}" HorizontalAlignment="Center" >Ingrese el Token de Seguridad</TextBlock>

                <!--<Border Visibility="Collapsed" BorderBrush="#FFB6B7B8" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Center" CornerRadius="2"  Width="200" Margin="1,2,0,0" Height="45">
                                <StackPanel Orientation="Horizontal" Margin="0,0,-1,0" >
                                    <TextBlock  Padding="7" TextWrapping="Wrap" Text="{Binding Path= TxtUsuarioExternoOrdinalCodigoSeguridad_Text, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Foreground="#ffff" Width="49" Margin="0,1,0,0" FontSize="18"  TextAlignment="Center"  FontFamily="Yu Gothic Medium"  >
                                        <TextBlock.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF9CD382" Offset="0"/>
                                                <GradientStop Color="#FF4E783B" Offset="1"/>
                                            </LinearGradientBrush>
                                        </TextBlock.Background>
                                    </TextBlock>
                                    <PasswordBox  Name="passBoxUserPin2"   MaxLength="7" PasswordChar="*"  Width="149"   VerticalContentAlignment="Center" Padding="3,4,0,0" FontFamily="Yu Gothic Medium" FontSize="18" RenderTransformOrigin="0.5,0.5" />
                                </StackPanel>
                            </Border>-->

                <Border  BorderThickness="1" BorderBrush="#FFABADB3" CornerRadius="5"  Height="40" Margin="5" HorizontalAlignment="Center" Width="300">
                    <DockPanel >
                        <Border Background="#FF009BFF" CornerRadius="5 0 0 5" Width="40">
                            <TextBlock Text="{Binding Path= TxtUsuarioExternoOrdinalCodigoSeguridad_Text, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  FontSize="20" FontWeight="ExtraBold" Foreground="White"  VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                        </Border>
                        <PasswordBox Name="passBoxUserPin"   MaxLength="7" PasswordChar="*"  BorderBrush="Transparent" FontSize="18" VerticalContentAlignment="Center" />
                    </DockPanel>
                </Border>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"  Margin="10">
                    <Button Style="{DynamicResource btnCancelIcon}" Content="Cancelar" Foreground="White" Width="120" Command="{Binding Path=Button_CerrarModal_Command}"/>
                    <Button Style="{DynamicResource btnAcceptIcon}" Content="Aceptar" Foreground="White" Width="120" Command="{Binding Path=Button_Procesar_Command}">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource PasswordBoxConverter }">
                                <Binding ElementName="passBoxUserPin" />
                                <Binding ElementName="passBoxUserCedula" />
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>
                </StackPanel>

            </StackPanel>


        </Grid>
        <!--Selecion de entrada o salida-->
        <DockPanel   HorizontalAlignment="Center" VerticalAlignment="Top" Width="212" Height="50" Grid.ColumnSpan="2">
            <RadioButton Style="{StaticResource toogleStyle}" GroupName="GroupTipoFlujo"  IsChecked="{Binding Path=OpcionActualTipoFlujo, Mode=TwoWay, Converter={StaticResource RadioConverter}, ConverterParameter= 0}" Command="{Binding Path=RadGroupTipoFlujoCommand}" CommandParameter="0" Margin="5,5,0,0" HorizontalAlignment="Left" Width="104" BorderBrush="{x:Null}" Template="{DynamicResource ButtonBaseControlTemplate1}">
                <RadioButton.Resources>
                    <ControlTemplate x:Key="ButtonBaseControlTemplate1" TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" >
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF28A745"/>
                                <Setter Property="OpacityMask" TargetName="contentPresenter" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="Foreground" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </RadioButton.Resources>
                <StackPanel Orientation="Horizontal" >
                    <!--<Image  Source="{StaticResource  MoneyInput}" Width="30" />-->
                    <fa:ImageAwesome Icon="ArrowCircleDown" VerticalAlignment="Center" HorizontalAlignment="Center"  Width="25"  Foreground="White"/>
                    <TextBlock x:Name="Entrada" Text="Entrada"   VerticalAlignment="Center" Padding="7,0" HorizontalAlignment="Center" Foreground="White"/>
                </StackPanel>
            </RadioButton>
            <RadioButton Style="{StaticResource toogleStyle}" GroupName="GroupTipoFlujo"  IsChecked="{Binding Path=OpcionActualTipoFlujo, Mode=TwoWay, Converter={StaticResource RadioConverter}, ConverterParameter= 1}" Command="{Binding Path=RadGroupTipoFlujoCommand}" CommandParameter="1" Margin="5,5,0,-1"  HorizontalAlignment="Left" Width="98" BorderBrush="{x:Null}" Template="{DynamicResource ButtonBaseControlTemplate1}">
                <RadioButton.Resources>
                    <ControlTemplate x:Key="ButtonBaseControlTemplate1" TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border"  BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFDC3545"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="Foreground" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </RadioButton.Resources>
                <WrapPanel>
                    <!--<Image  Source="{StaticResource  MoneyOutput}" Width="30" />-->
                    <fa:ImageAwesome Icon="ArrowCircleUp" VerticalAlignment="Center" HorizontalAlignment="Center"  Width="25" Foreground="White"/>
                    <TextBlock Text="Salida" VerticalAlignment="Center" Padding="7,0" HorizontalAlignment="Center" Foreground="White"/>
                </WrapPanel>
            </RadioButton>
        </DockPanel>

        <!--Slececion tipo de entrado o Salida-->
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Top" Width="290" Height="98" Margin="0 50 0 0" Grid.ColumnSpan="2">
            <TextBlock HorizontalAlignment="Left" Margin="5" Style="{StaticResource inlineText}"    Name="lbConcepto"  Height="16" Width="69">Concepto</TextBlock>

            <ComboBox  
                   Name="cbxTipoIngresos"
                   ItemsSource="{Binding Path=ColeccionTipoIngresoMovimientos}"
                   SelectedItem="{Binding Path=TipoIngresoSeleccionado, Mode=TwoWay}"
                   Style="{DynamicResource Select}"
                   DisplayMemberPath="Nombre"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top" 
                   Width="285" Height="36" 
                   VerticalContentAlignment="Center" 
                   Visibility="{Binding Path=ShowTipoIngresoCombobox, Converter={StaticResource BooleanToVisibilityConverter} }">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Concepto_Combobox_Changed_Trigger_Command}">
                            <i:InvokeCommandAction.CommandParameter>
                                <MultiBinding Converter="{StaticResource PasswordBoxConverter}">
                                    <Binding ElementName="passBoxUserPin" />
                                    <Binding ElementName="passBoxUserCedula" />
                                </MultiBinding>
                            </i:InvokeCommandAction.CommandParameter>
                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

            </ComboBox>

            <ComboBox  
                   Name="cbxTipoEgresos"
                   ItemsSource="{Binding Path=ColeccionTipoEgresoMovimientos}"
                   SelectedItem="{Binding Path=TipoEgresoSeleccionado, Mode=TwoWay}"
                   Style="{DynamicResource Select}"
                   DisplayMemberPath="Nombre"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top" 
                   Width="285" Height="36" 
                   VerticalContentAlignment="Center" 
                   Visibility="{Binding Path=ShowTipoEgresoCombobox, Converter={StaticResource BooleanToVisibilityConverter} }">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Concepto_Combobox_Changed_Trigger_Command}" >

                            <i:InvokeCommandAction.CommandParameter>
                                <MultiBinding Converter="{StaticResource PasswordBoxConverter}">
                                    <Binding ElementName="passBoxUserPin" />
                                    <Binding ElementName="passBoxUserCedula" />
                                </MultiBinding>
                            </i:InvokeCommandAction.CommandParameter>

                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>


            </ComboBox>
        </StackPanel>

        <!--Comentario-->
        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0 120 0 0" Width="320" Grid.ColumnSpan="2" >

            <TextBlock  Style="{StaticResource inlineText}"    Name="lbDescripcion" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20 0" Text="Descripción"/>
            <StackPanel HorizontalAlignment="Center" Width="282">
                <TextBox Style="{StaticResource inlineTextBox}" Name="txtComentario" Height="80" TextWrapping="Wrap" Text="{Binding ComentarioText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True"  VerticalScrollBarVisibility="Visible" Margin="0,5,0,0" FontSize="15"/>
            </StackPanel>

        </StackPanel>

        <StackPanel Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Center">
            <!--Campo No. Documento-->
            <StackPanel   Visibility="{Binding Path=IsSeccionExternoEnable, Converter={StaticResource BooleanToVisibilityConverter} }" Margin="0 5" HorizontalAlignment="Center" VerticalAlignment="Top">
                <TextBlock Style="{StaticResource inlineText}" Margin="0 2">Pin</TextBlock>
                <PasswordBox Name="passBoxUserCedula" Style="{DynamicResource InputPassword}" PasswordChar="*" Margin="0,3,0,0" Width="280" VerticalContentAlignment="Center" />

            </StackPanel>

            <!--Campo Nombre Cajera-->
            <StackPanel Visibility="{Binding Path=IsEnableCajera, Converter={StaticResource BooleanToVisibilityConverter} }" Margin="0 5" HorizontalAlignment="Center" VerticalAlignment="Bottom" >
                <TextBlock Style="{StaticResource inlineText}" Margin="2">Nombre de la  Cajera:</TextBlock>
                <TextBox Width="280" Text="{Binding Path=NombreCajera}" Style="{DynamicResource InputText}" Margin="0,3,0,0" VerticalContentAlignment="Center" ></TextBox>

            </StackPanel>

        </StackPanel>

        <!--Campo Monto-->
        <StackPanel Grid.Row="2" Grid.ColumnSpan="2"  HorizontalAlignment="Center" >
            <TextBlock Style="{StaticResource inlineText}" Name="lbMonto"  Text="Monto" HorizontalAlignment="Left" VerticalAlignment="Center"   />

            <Border  BorderThickness="1" BorderBrush="#FFABADB3" CornerRadius="5"  Height="40" Margin="5">
                <DockPanel >
                    <Border Background="#FF009BFF" CornerRadius="5 0 0 5" Width="40">
                        <fa:ImageAwesome Icon="Dollar" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" Width="10" />

                        <!--<TextBlock x:Name="tbFontAwesome" Text="$"  FontSize="20" FontWeight="ExtraBold" Foreground="White"  VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>-->
                    </Border>
                    <TextBox Name="txtMonto" Text="{Binding  Monto_Text, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" PreviewTextInput="TxtMonto_PreviewTextInput" DataObject.Pasting="TextBoxPasting" VerticalContentAlignment="Center"  BorderBrush="Transparent" Margin="0 0 0 0 " Width="234"   />
                </DockPanel>
            </Border>



        </StackPanel>



        <!--<WrapPanel Orientation="Vertical" Grid.Row="2"   HorizontalAlignment="Center" Width="284" >

            -->
        <!--Textbox para No. Documento-->
        <!--



            <StackPanel   Visibility="{Binding Path=ShowExternalUserSecurityPanel, Converter={StaticResource BooleanToVisibilityConverter} }"     IsEnabled="{Binding Path=IsSeccionExternoEnable,Mode=TwoWay}" Width="268"  >


                <GroupBox BorderBrush="DarkGray" Margin="0,0,-12,0" Style="{DynamicResource GroupBoxCredencialesStyle}" >
                    <GroupBox.Header >
                        <Label Width="206">Credeciales Usuario Autorizado</Label>
                    </GroupBox.Header>

                    <WrapPanel Orientation="Vertical">


                        <WrapPanel Orientation="Horizontal" Width="268">


                            <Button     
                                Name="btnAplicar"    
                                Command="{Binding Path=Button_Aplicar_Command}"                                 
                                
                                Style="{DynamicResource Info}"
                                Width="46"
                                Height="42"
                                Padding="0" >
                                <Button.Content>
                                    <fa:ImageAwesome Icon="Search" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" Width="15"  />
                                </Button.Content>

                                <Button.CommandParameter>

                                    <MultiBinding Converter="{StaticResource PasswordBoxConverter }">
                                        <Binding ElementName="passBoxUserPin" />
                                        <Binding ElementName="passBoxUserCedula" />
                                    </MultiBinding>

                                </Button.CommandParameter>
                            </Button>

                            <Button   Name="btnCancelarSecuritySelecction" 
                                 Command="{Binding Path=Button_Cancelar_Security_Selection_Command}" 
                                 Margin="3,0,0,0"
                                 Style="{DynamicResource Secondary}"
                                 Width="46"                                 
                                 Height="42"
                                 Padding="2"
                                   >
                                <Button.Content>
                                    <fa:ImageAwesome Icon="Refresh" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" Width="15" />
                                </Button.Content>

                                <Button.CommandParameter>

                                    <MultiBinding Converter="{StaticResource PasswordBoxConverter }">
                                        <Binding ElementName="passBoxUserPin" />
                                        <Binding ElementName="passBoxUserCedula" />
                                    </MultiBinding>

                                </Button.CommandParameter>

                            </Button>
                        </WrapPanel>



                    </WrapPanel>

                </GroupBox>







            </StackPanel>

        </WrapPanel>-->

        <!--Botones para Procesar y Restablecer-->

        <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.ColumnSpan="2"  VerticalAlignment="Top" HorizontalAlignment="Center" Height="54" Margin="0 80 0 0" Width="300">
            <Button   Name="btnRestablecer"  Style="{DynamicResource btnCancelIcon}"    Width="120" Height="44" Margin="5" BorderBrush="#FFA7D0F1" FontSize="16" Foreground="#FFFBFBFB" RenderTransformOrigin="0.5,0.5"  Command="{Binding Path=Button_Restablecer_Command}" CommandParameter="{Binding ElementName=passBoxUserCedula}" Background="#FFC15353"   >Restablecer</Button>
            <Button  Name="btnProcesar" Width="120"  Style="{DynamicResource btnAcceptIcon}" Margin="50 5 0 0" BorderBrush="{x:Null}"  Foreground="White" Command="{Binding Path=Button_Aplicar_Command}" Background="#FF53C157" FontSize="16" >Procesar
                <Button.CommandParameter>
                    <MultiBinding Converter="{StaticResource PasswordBoxConverter }">
                        <Binding ElementName="passBoxUserPin" />
                        <Binding ElementName="passBoxUserCedula" />
                    </MultiBinding>
                </Button.CommandParameter>
            </Button>
        </StackPanel>


        <!--<Label  HorizontalAlignment="Left"  Grid.Row="0" VerticalAlignment="Center" Margin="0,2,0,5" Width="778" Height="32"  HorizontalContentAlignment="Center" Grid.ColumnSpan="4" Content="Registro de movimientos" Background="AliceBlue" FontFamily="Yu Gothic Medium" FontSize="16" Opacity="0.97" FontWeight="Bold" FontStyle="Italic"/>-->
        <!--<Label  Grid.Row="7" VerticalAlignment="Center" Margin="3,158,0,80" Height="38"  HorizontalContentAlignment="Center" Grid.ColumnSpan="3" Content="Consulta rápida de movimientos" Background="AliceBlue" FontFamily="Yu Gothic Medium" FontSize="16" Opacity="0.97" FontWeight="Bold" FontStyle="Italic" HorizontalAlignment="Left" Width="775"/>-->

        <!--<DockPanel Grid.Row="9" Grid.ColumnSpan="3" Height="47" VerticalAlignment="Top" Margin="3,47,0,0" RenderTransformOrigin="0.504,0.938" Grid.RowSpan="2">
            <TextBlock Text="Últimos" HorizontalAlignment="Left" Margin="5,10,0,10"   FontFamily="Yu Gothic Medium" FontSize="16"/>
            <ComboBox  
                   Name="cbxPageSize"
                   ItemsSource="{Binding Path=ColeccionPageSizes}"
                   SelectedItem="{Binding Path=CurrentPageSize, Mode=TwoWay}"
                   DisplayMemberPath="Size"
                   Grid.Column="1" 
                   HorizontalAlignment="Left"
                   Margin="10,6,0,0" Grid.Row="2"
                   VerticalAlignment="Top" 
                   Width="100" Height="34" 
                   VerticalContentAlignment="Center" 
                   Grid.ColumnSpan="2"
            >
            </ComboBox>
            <TextBlock Text=" movimientos." HorizontalAlignment="Left" Margin="5,10,0,10"   FontFamily="Yu Gothic Medium" FontSize="16"/>
        </DockPanel>-->

        <!--<DataGrid  CellStyle="{StaticResource SelectedRemoved}"   CanUserSortColumns="False" x:Name="dataGridMovimiento" AutoGenerateColumns="False" AlternatingRowBackground="#FFE4F1F5"  IsReadOnly="True" CanUserAddRows="False" CanUserDeleteRows="False" Height="352" Margin="10,0,4,10" Grid.Row="7" VerticalAlignment="Bottom" Grid.ColumnSpan="3" HorizontalScrollBarVisibility="Visible"  ItemsSource="{Binding  ColeccionDeMovimientos, Mode=OneWay}" ColumnHeaderHeight="30" Grid.RowSpan="4"   >

            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Height" Value="Auto"/>
                    <Setter Property="MinHeight" Value="40"/>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                -->
        <!--<DataGridTextColumn Header="#"                         Binding="{Binding Path=Orden}"/>-->
        <!--
                <DataGridTextColumn  Header="#"                 Binding="{Binding Path=Orden}" MinWidth="40" CellStyle="{StaticResource CentrarContenidoCelda}"   Foreground="Black" />
                -->
        <!--<DataGridTextColumn  Header="Fecha"          Binding="{Binding Path=FechaEnFormato}" MinWidth="150" CellStyle="{StaticResource CentrarContenidoCelda}"    Foreground="Black" />-->
        <!--<DataGridTextColumn  Header="Concepto"    Binding="{Binding Path=CategoriaConcepto}" CellStyle="{StaticResource CentrarContenidoCelda}" Foreground="Black" />-->
        <!--

                <DataGridTemplateColumn Header="Fecha" MinWidth="140" MaxWidth="143">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical"  VerticalAlignment="Center" HorizontalAlignment="Left" >
                                <TextBlock   Text="{Binding FechaEnFormato}"  TextWrapping="Wrap" TextAlignment="Left" Margin="0,2,0,0" Foreground="Black" FontSize="12"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Concepto" MinWidth="140" MaxWidth="143">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical"  VerticalAlignment="Center" HorizontalAlignment="Left" >
                                <TextBlock   Text="{Binding CategoriaConcepto}"  TextWrapping="Wrap" TextAlignment="Left" Margin="0,2,0,0" Foreground="Black" FontSize="12"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Descripción" MinWidth="190" MaxWidth="197">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical"  VerticalAlignment="Center" HorizontalAlignment="Left" >
                                <TextBlock   Text="{Binding Descripcion}"  TextWrapping="Wrap" TextAlignment="Left" Margin="0,2,0,0" Foreground="Black"/>
                                <TextBlock   Text="{Binding ReferenciaFormato}"    TextWrapping="Wrap" TextAlignment="Left"  FontSize="12" Foreground="#c1c1c1"  Margin="0,2,0,2"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>



                -->
        <!--<DataGridTextColumn  Header="Entrada/Salida"   Binding="{Binding Path=EntradaOSalidaEnFormato}"   CellStyle="{StaticResource CentrarContenidoCelda}" />-->
        <!--

                <DataGridTextColumn Header="Entrada/Salida"    Binding="{Binding Path= EntradaOSalidaEnFormato}" CellStyle="{StaticResource CentrarContenidoCelda}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource CellTipoMovimientoConverter}">
                                        <Binding Path="Categoria"></Binding>
                                        <Binding Path="EntradaOSalida"></Binding>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn  Header="Balance"               Binding="{Binding Path=BalanceEnFormato}"    CellStyle="{StaticResource CentrarContenidoCelda}"  MinWidth="100"  Foreground="Black" />
            </DataGrid.Columns>
        </DataGrid>-->


        <!--<Label   HorizontalAlignment="Left" Margin="35,50,0,0" Grid.Row="7" VerticalAlignment="Top" FontSize="12" >
            <TextBlock TextWrapping="Wrap" Height="21" Width="57" TextAlignment="Right" Text="Mensajero" Margin="0"/>
        </Label>

        <Label Content="{Binding Path= Label_Status_Content, Mode=TwoWay}" Grid.Column="1" HorizontalAlignment="Left" Margin="5,12,0,0" Grid.Row="4" VerticalAlignment="Top"/>-->

        <!--<xceedc:MaskedTextBox x:Name="MaskedCedula" ValueDataType="{x:Type  s:String}" />-->


    </Grid>


</UserControl>
