<#@ template debug="true" hostspecific="false" language="VB" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="Microsoft.SqlServer.Smo" #>
<#@ assembly name="Microsoft.SqlServer.ConnectionInfo" #>
<#@ assembly name="Microsoft.SqlServer.Management.Sdk.Sfc" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System" #>
<#@ import namespace="Microsoft.SqlServer.Management.Smo" #>
<#@ import namespace="Microsoft.SqlServer.Management.Sdk.Sfc" #>
<#@ import namespace="Microsoft.VisualBasic" #>
<#@ output extension=".T4.cs" #>
<#
    Dim _server As String = ".\SQLEXPRESS2008"
    Dim _database As String = "029"

#>
// Generated from database [<#=_database#>] in server [<#=_server#>
// Do NOT edit this file. If needed make additions in a separate partial class
using System;
using System.IO;
using System.Runtime.Serialization;
namespace MAR.DataAccess.Tables {

<#
    Dim srv As Server = New Server(_server)
    For each iTable as Table in srv.Databases(_database).Tables
        If NOT iTable.IsSystemObject And Right(iTable.Name,3)<>"OLD" Then
#>
    // Mirrors DB Table <#= iTable.Name #>
    [Serializable()]
    public partial class <#= iTable.Name #>Record : BaseRecord
	{
<# 
          For each iColumn as Column in iTable.Columns
			  If UCase(iColumn.Name)<>"CREATEDBY" AND UCase(iColumn.Name)<>"CREATEDON" AND UCase(iColumn.Name)<>"MODIFIEDON"  AND UCase(iColumn.Name)<>"MODIFIEDBY" Then
#>
        public <#= GetNetDataType(iColumn.DataType.Name, iColumn.Nullable) #> <#= iColumn.Name #>;
<#
			  End If
		   Next
#>
    }

<#
        End If
    Next 
#>
}

<#+
        Public Shared Function GetNetDataType(sqlDataTypeName As String, isNullable as Boolean) As String
            Dim TheResult as String
            Select Case sqlDataTypeName.ToLower()
                Case "bigint"
                    TheResult =  "int64"
                Case "binary"
                    TheResult =  "byte()"
                Case "bit"
                    TheResult =  "bool"
                Case "char"
                    TheResult =  "char"
                Case "cursor"
                    TheResult =  "object"
                Case "datetime"
                    TheResult =  "DateTime"
                Case "decimal"
                    TheResult =  "decimal"
                Case "float"
                    TheResult =  "double"
                Case "int"
                    TheResult =  "int"
                Case "money"
                    TheResult =  "decimal"
                Case "nchar"
                    TheResult =  "string"
                Case "numeric"
                    TheResult =  "decimal"
                Case "nvarchar"
                    TheResult =  "string"
                Case "real"
                    TheResult =  "single"
                Case "smallint"
                    TheResult =  "int16"
                Case "text"
                    TheResult =  "string"
                Case "tinyint"
                    TheResult =  "byte"
                Case "varbinary"
                    TheResult =  "byte()"
                Case "xml"
                    TheResult =  "string"
                Case "varchar"
                    TheResult =  "string"
                Case "uniqueidentifier"
                    TheResult =  "guid"
                Case "date"
                    TheResult =  "DateTime"
                Case "smalldatetime"
                    TheResult =  "DateTime"
                Case "image"
                    TheResult =  "byte()"
                Case Else
                    TheResult =  "object"
            End Select

            If isNullable AndAlso TheResult<>"string" AndAlso TheResult<>"object" _
                          AndAlso TheResult<>"byte()" Then            
                Return TheResult & "?"
            Else
                Return TheResult
            End If
        End Function
#>